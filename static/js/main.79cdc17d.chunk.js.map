{"version":3,"sources":["reportWebVitals.js","components/Scroll.js","components/Card.js","components/CardList.js","components/SearchBox.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Scroll","props","style","overflowY","border","height","children","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,2CCGCQ,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCUJC,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACI,6BAAKF,IACL,4BAAIC,WCgBLK,EArBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZM,EAAOG,GAAGR,UCD5BS,EATG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAC7B,OACI,qBAAKV,UAAU,MAAf,SACI,uBAAOA,UAAU,mCAAmCW,KAAK,SAASC,YAAY,gBAAgBC,SAAUH,OCsCrGI,G,wDApCX,aAAc,IAAD,8BACT,gBAYJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAER,YAAaO,EAAME,OAAOC,SAZ1C,EAAKC,MAAQ,CACThB,OAAQ,GACRK,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACfY,MAAM,8CAA8CtC,MAAK,SAAAuC,GAAQ,OAAGA,EAASC,UAAQxC,MAAK,SAAAyC,GAAK,OAAI,EAAKP,SAAS,CAACb,OAAQoB,S,oBAO9H,WACI,MAA8BC,KAAKL,MAA5BhB,EAAP,EAAOA,OAAQK,EAAf,EAAeA,YACTiB,EAAiBtB,EAAOuB,QAAO,SAAAC,GACjC,OAAOA,EAAM/B,KAAKgC,cAAcC,SAASrB,EAAYoB,kBAEzD,OAAQzB,EAAO2B,OAGP,sBAAK/B,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,6BACA,cAAC,EAAD,CAAWU,aAAce,KAAKV,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUX,OAAQsB,SAN9B,gD,GAvBMM,IAAMC,YCKxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1B1D,M","file":"static/js/main.79cdc17d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll","import React from \"react\";\r\n\r\nconst Card = ({name, email, id}) => {\r\n    // const {name, email, id} = props;\r\n    return(\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='Robot' src={`https://robohash.org/${id}?150x150`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React from \"react\";\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                robots.map((user, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={robots[i].id} \r\n                            id={robots[i].id} \r\n                            name={robots[i].name} \r\n                            email={robots[i].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList","import React from \"react\";\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input className='pa3 ba b--green bg-lightest-blue' type='search' placeholder='search robots' onChange={searchChange}/>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default SearchBox","import React from \"react\";\r\nimport Scroll from '../components/Scroll';\r\nimport CardList from \"../components/CardList\";\r\nimport SearchBox from \"../components/SearchBox\";\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response=> response.json()).then(users => this.setState({robots: users}));\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n    render() {\r\n        const {robots, searchfield} = this.state\r\n        const filteredRobots = robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length ?\r\n            <h1>Loading...</h1>:\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>Robotic Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nimport App from './containers/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}